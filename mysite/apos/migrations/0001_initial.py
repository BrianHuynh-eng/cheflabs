# Generated by Django 5.0 on 2024-10-22 03:11

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountingPeriods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accounting_period_start', models.DateField()),
                ('accounting_period_end', models.DateField()),
                ('added_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalLocations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('contact_person', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Recipes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe_name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='images/')),
                ('description', models.TextField()),
                ('preparation_time', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cooking_temperature', models.PositiveIntegerField()),
                ('cooking_time', models.DecimalField(decimal_places=2, max_digits=10)),
                ('dishing_up_time', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_recipe_time', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quality_standards', models.TextField()),
                ('serving_size', models.DecimalField(decimal_places=3, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='RegionLocations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_identifier', models.CharField(blank=True, max_length=12)),
                ('state_or_province_name', models.TextField()),
                ('country_name', models.TextField()),
                ('overtime_threshold', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_identifier', models.CharField(blank=True, max_length=12)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('hire_date', models.DateField()),
                ('job_position', models.CharField(choices=[('Owner', 'Owner'), ('Manager', 'Manager'), ('Chef', 'Chef'), ('Cook', 'Cook'), ('Kitchen assistant', 'Kitchen assistant'), ('Waiter', 'Waiter'), ('Bartender', 'Bartender'), ('Cashier', 'Cashier'), ('Cleaner', 'Cleaner')], max_length=18)),
                ('account_username', models.CharField(blank=True, max_length=128)),
                ('account_password', models.CharField(max_length=128)),
                ('hourly_wage', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_training_complete', models.BooleanField(default=False)),
                ('availability', models.JSONField()),
                ('notes', models.CharField(blank=True, max_length=150)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apos.externallocations')),
                ('region_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.regionlocations')),
            ],
        ),
        migrations.CreateModel(
            name='DailyShiftRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shift_type', models.CharField(choices=[('Breakfast', 'Breakfast'), ('Lunch', 'Lunch'), ('Dinner', 'Dinner'), ('Half', 'Half'), ('Full', 'Full')], max_length=9)),
                ('shift_date', models.DateField()),
                ('punch_in_time', models.TimeField(blank=True, null=True)),
                ('punch_out_time', models.TimeField(blank=True, null=True)),
                ('total_hours_worked', models.DecimalField(decimal_places=1, max_digits=10)),
                ('earnings', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('Upcoming', 'Upcoming'), ('Late', 'Late'), ('In-progress', 'In-progress'), ('Completed', 'Completed'), ('Uncompleted', 'Uncompleted'), ('Missed', 'Missed'), ('SWAPPED', 'SWAPPED')], default='Upcoming', max_length=11)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.employees')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeesPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_tips_received', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_hours_worked', models.DecimalField(decimal_places=1, default=0, max_digits=10)),
                ('total_overtime_hours_worked', models.DecimalField(decimal_places=1, default=0, max_digits=10)),
                ('late_to_work_count', models.PositiveIntegerField(default=0)),
                ('missed_work_days_count', models.PositiveIntegerField(default=0)),
                ('uncompleted_shift_count', models.PositiveIntegerField(default=0)),
                ('requests_created', models.PositiveIntegerField(default=0)),
                ('total_transactions_completed', models.PositiveIntegerField(default=0)),
                ('total_sales_handled_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_breaks_taken', models.PositiveIntegerField(default=0)),
                ('total_break_time', models.DecimalField(decimal_places=1, default=0, max_digits=10)),
                ('total_inventory_waste_count', models.PositiveIntegerField(default=0)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.employees')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
            ],
        ),
        migrations.CreateModel(
            name='BreakRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_break_time', models.TimeField()),
                ('end_break_time', models.TimeField()),
                ('break_duration', models.PositiveIntegerField()),
                ('break_date', models.DateField(auto_now_add=True)),
                ('daily_shift_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.dailyshiftrecords')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.employees')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
            ],
        ),
        migrations.CreateModel(
            name='InternalLocations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.TextField()),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeTipRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Dine-in', 'Dine-in'), ('Takeout', 'Takeout'), ('Delivery', 'Delivery'), ('Other', 'Other')], max_length=8)),
                ('tip_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tip_type', models.CharField(choices=[('Cash', 'Cash'), ('Credit/Debit', 'Credit/Debit'), ('Gift card', 'Gift card'), ('Cryptocurrency', 'Cryptocurrency'), ('Other', 'Other')], max_length=14)),
                ('tip_date', models.DateTimeField(auto_now_add=True)),
                ('daily_shift_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.dailyshiftrecords')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.employees')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('internal_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.internallocations')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryCostReports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beginning_inventory', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('ending_inventory', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('purchases', models.DecimalField(decimal_places=3, max_digits=10)),
                ('total_revenue', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_inventory_wastage_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('theoretical_cogs', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('actual_cogs', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('current_cogs', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cogs_variance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cogs_variance_percent', models.DecimalField(decimal_places=1, max_digits=10)),
                ('theoretical_gross_profit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('actual_gross_profit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_transfers', models.PositiveIntegerField()),
                ('report_date', models.DateField(auto_now_add=True)),
                ('accounting_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apos.accountingperiods')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=100)),
                ('item_type', models.CharField(choices=[('Ingredient', 'Ingredient'), ('Nonfood', 'Nonfood')], max_length=10)),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('par_level', models.DecimalField(blank=True, decimal_places=3, default=None, max_digits=10, null=True)),
                ('total_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_of_measurement', models.CharField(choices=[('kg', 'kg'), ('lbs', 'lbs'), ('ml', 'ml'), ('mm', 'mm'), ('L', 'L'), ('pcs', 'pcs'), ('oz', 'oz'), ('g', 'g'), ('fl oz', 'fl oz'), ('cups', 'cups'), ('qt', 'qt'), ('gal', 'gal'), ('in', 'in'), ('cm', 'cm')], max_length=5)),
                ('barcode', models.TextField()),
                ('safety_stock', models.DecimalField(decimal_places=2, max_digits=10)),
                ('deliveries_per_week', models.PositiveIntegerField()),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryChecks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expected_quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('actual_quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('check_date', models.DateField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.employees')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.inventoryitems')),
            ],
        ),
        migrations.CreateModel(
            name='AddOns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_on_name', models.TextField()),
                ('additional_quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('additional_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_available', models.BooleanField()),
                ('additional_ingredient_costs', models.DecimalField(decimal_places=2, max_digits=10)),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.inventoryitems')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryTransfers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_transferred', models.DecimalField(decimal_places=3, max_digits=10)),
                ('transfer_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transfer_date', models.DateField()),
                ('destination_external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='destination_external_location', to='apos.externallocations')),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.inventoryitems')),
                ('source_external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='source_external_location', to='apos.externallocations')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryTransfersInternal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destination_external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='destination_external_location_internal', to='apos.externallocations')),
                ('destination_internal_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destination_internal_location', to='apos.internallocations')),
                ('inventory_transfer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.inventorytransfers')),
                ('source_external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='source_external_location_internal', to='apos.externallocations')),
                ('source_internal_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_internal_location', to='apos.internallocations')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opening_stock_quantity', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('opening_stock_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('closing_stock_quantity', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('closing_stock_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('purchases_quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('purchases_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('wasted_quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('wasted_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('theoretical_usage_quantity', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('theoretical_usage_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('actual_usage_quantity', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('actual_usage_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('current_usage_quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('current_usage_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('usage_variance', models.DecimalField(decimal_places=3, max_digits=10)),
                ('usage_variance_percent', models.DecimalField(decimal_places=1, max_digits=10)),
                ('report_date', models.DateField(auto_now_add=True)),
                ('accounting_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apos.accountingperiods')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.inventoryitems')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryWasteBin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_wasted', models.DecimalField(decimal_places=3, max_digits=10)),
                ('money_wasted', models.DecimalField(decimal_places=2, max_digits=10)),
                ('waste_reason', models.CharField(choices=[('Spoilage', 'Spoilage'), ('Breakage', 'Breakage'), ('Theft', 'Theft'), ('Equipment malfunction/Faulty storage', 'Equipment malfunction/Faulty storage')], max_length=36)),
                ('waste_date', models.DateField(auto_now=True)),
                ('comments', models.TextField()),
                ('employee_culprit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_culprit', to='apos.employees')),
                ('employee_reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_reporter', to='apos.employees')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.inventoryitems')),
            ],
        ),
        migrations.CreateModel(
            name='LocationTrainingInsights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variance_faults', models.PositiveIntegerField()),
                ('suggested_training', models.TextField()),
                ('last_updated', models.DateField(auto_now=True)),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
            ],
        ),
        migrations.CreateModel(
            name='MenuItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='images/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('course', models.CharField(choices=[('Appetizer', 'Appetizer'), ('Entrée', 'Entrée'), ('Dessert', 'Dessert')], max_length=9)),
                ('is_available', models.BooleanField()),
                ('gross_profit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.recipes')),
            ],
        ),
        migrations.CreateModel(
            name='MenuItemOrders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('order_time', models.TimeField(auto_now_add=True)),
                ('order_status', models.CharField(choices=[('Pending', 'Pending'), ('In Progress', 'In Progress'), ('Completed', 'Completed'), ('Recalled', 'Recalled')], default='Pending', max_length=11)),
                ('add_ons', models.ManyToManyField(blank=True, to='apos.addons')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('internal_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.internallocations')),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.menuitems')),
            ],
        ),
        migrations.CreateModel(
            name='MenuItemAddOns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_on', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.addons')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.menuitems')),
            ],
        ),
        migrations.CreateModel(
            name='MenuEngineeringReports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_revenue', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_cogs', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gross_profit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('number_sold', models.PositiveIntegerField()),
                ('matrix', models.CharField(choices=[('Star', 'Star'), ('Puzzle', 'Puzzle'), ('Plow horse', 'Plow horse'), ('Dog', 'Dog'), ('Insufficient data', 'Insufficient data')], max_length=17)),
                ('report_date', models.DateField(auto_now_add=True)),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.menuitems')),
            ],
        ),
        migrations.CreateModel(
            name='NutritionAllergenInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serving_size', models.DecimalField(decimal_places=3, max_digits=10)),
                ('calories', models.PositiveIntegerField()),
                ('total_fat', models.DecimalField(decimal_places=1, max_digits=10)),
                ('saturated_fat', models.DecimalField(decimal_places=1, max_digits=10)),
                ('trans_fat', models.DecimalField(decimal_places=1, max_digits=10)),
                ('cholesterol', models.PositiveIntegerField()),
                ('sodium', models.PositiveIntegerField()),
                ('total_carbohydrates', models.PositiveIntegerField()),
                ('dietary_fiber', models.PositiveIntegerField()),
                ('total_sugars', models.PositiveIntegerField()),
                ('added_sugars', models.PositiveIntegerField()),
                ('protein', models.PositiveIntegerField()),
                ('vitamin_d', models.PositiveIntegerField()),
                ('calcium', models.PositiveIntegerField()),
                ('iron', models.PositiveIntegerField()),
                ('potassium', models.PositiveIntegerField()),
                ('allergens', models.TextField()),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.menuitems')),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ordered_quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_order_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_date', models.DateField()),
                ('arrival_date', models.DateField()),
                ('order_status', models.CharField(choices=[('Pending', 'Pending'), ('Received', 'Received'), ('Cancelled', 'Cancelled')], max_length=9)),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.inventoryitems')),
            ],
        ),
        migrations.CreateModel(
            name='OrderInventoryAlerts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_message', models.TextField()),
                ('alert_date', models.DateField(auto_now_add=True)),
                ('alert_type', models.CharField(choices=[('Quantity Variance', 'Quantity Variance'), ('Value Variance', 'Value Variance'), ('Arrival Date Variance', 'Arrival Date Variance'), ('Order Alert', 'Order Alert')], max_length=21)),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.orders')),
            ],
        ),
        migrations.CreateModel(
            name='OrderInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('received_quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('received_date', models.DateField(auto_now=True)),
                ('quantity_variance', models.DecimalField(decimal_places=3, max_digits=10)),
                ('quantity_variance_percent', models.DecimalField(decimal_places=1, max_digits=10)),
                ('total_order_value_variance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_order_value_variance_percent', models.DecimalField(decimal_places=1, max_digits=10)),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.orders')),
            ],
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered_menu_items_and_quantities', models.JSONField()),
                ('name_ordered_menu_items_and_quantities', models.JSONField()),
                ('tip_amount_percent', models.PositiveIntegerField(default=0)),
                ('service_charge_percent', models.PositiveIntegerField(default=0)),
                ('total_bill', models.DecimalField(decimal_places=2, max_digits=10)),
                ('category', models.CharField(choices=[('Dine-in', 'Dine-in'), ('Takeout', 'Takeout'), ('Delivery', 'Delivery')], max_length=8)),
                ('payment_type', models.CharField(choices=[('Cash', 'Cash'), ('Credit/Debit', 'Credit/Debit'), ('Gift card', 'Gift card'), ('Cryptocurrency', 'Cryptocurrency'), ('Other', 'Other')], max_length=14)),
                ('payment_datetime', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apos.employees')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('internal_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.internallocations')),
            ],
        ),
        migrations.AddField(
            model_name='recipes',
            name='region_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.regionlocations'),
        ),
        migrations.CreateModel(
            name='RecipeIngredients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.inventoryitems')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.recipes')),
                ('region_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.regionlocations')),
            ],
        ),
        migrations.AddField(
            model_name='externallocations',
            name='region_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.regionlocations'),
        ),
        migrations.AddField(
            model_name='accountingperiods',
            name='region_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.regionlocations'),
        ),
        migrations.CreateModel(
            name='Requests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_type', models.CharField(choices=[('Shift change', 'Shift change'), ('Shift swap', 'Shift swap'), ('Time-off/Absence', 'Time-off/Absence'), ('Overtime', 'Overtime'), ('Raise', 'Raise'), ('Report employee', 'Report employee'), ('Report complaint', 'Report complaint'), ('Other', 'Other')], max_length=16)),
                ('request_message', models.TextField()),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('request_status', models.CharField(choices=[('Pending', 'Pending'), ('Approved/Resolved', 'Approved/Resolved'), ('Denied', 'Denied')], default='Pending', max_length=17)),
                ('request_response', models.TextField()),
                ('response_date', models.DateTimeField(auto_now=True)),
                ('employee_requestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_requestor', to='apos.employees')),
                ('employee_responder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_responder', to='apos.employees')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
            ],
        ),
        migrations.CreateModel(
            name='ShiftScheduling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_position', models.TextField()),
                ('shift_type', models.CharField(choices=[('Breakfast', 'Breakfast'), ('Lunch', 'Lunch'), ('Dinner', 'Dinner'), ('Half', 'Half'), ('Full', 'Full')], max_length=9)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('total_hours', models.DecimalField(decimal_places=1, max_digits=10)),
                ('shift_date', models.DateField()),
                ('is_open_shift', models.BooleanField(default=False)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orignal_employee', to='apos.employees')),
                ('employee_swapped', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_swapped', to='apos.employees')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
            ],
        ),
        migrations.AddField(
            model_name='dailyshiftrecords',
            name='shift_scheduling',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.shiftscheduling'),
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.TextField()),
                ('description', models.TextField()),
                ('task_type', models.CharField(choices=[('Staff-related', 'Staff-related'), ('Menu-related', 'Menu-related'), ('Recipe-related', 'Recipe-related'), ('Inventory-related', 'Inventory-related'), ('Kitchen-related', 'Kitchen-related'), ('Dining room-related', 'Dining room-related'), ('Bathroom-related', 'Bathroom-related'), ('Building-related', 'Building-related'), ('Other', 'Other')], max_length=19)),
                ('due_date', models.DateTimeField()),
                ('priority', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High')], max_length=7)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('In Progress', 'In Progress'), ('Completed', 'Completed')], default='Pending', max_length=11)),
                ('employee_assignee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_assignee', to='apos.employees')),
                ('employee_assignor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_assignor', to='apos.employees')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
            ],
        ),
        migrations.CreateModel(
            name='TaskComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('comment_date', models.DateTimeField(auto_now_add=True)),
                ('employee_commenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_commenter', to='apos.employees')),
                ('employee_tasker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_tasker', to='apos.employees')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.tasks')),
            ],
        ),
        migrations.CreateModel(
            name='TaskAlerts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_message', models.TextField()),
                ('alert_date', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.employees')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.tasks')),
            ],
        ),
        migrations.CreateModel(
            name='TipPoolingRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('calculate_or_send_tips', models.CharField(choices=[('calculate', "Calculate Today's Tips"), ('send', "Send Today's Tips to Employees")], max_length=36)),
                ('total_pool', models.DecimalField(decimal_places=2, max_digits=10)),
                ('participants', models.TextField()),
                ('total_hours_worked', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tip_per_hour', models.DecimalField(decimal_places=2, max_digits=10)),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeTipPayouts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payout_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tip_per_hour', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.employees')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('tip_pool_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.tippoolingrecords')),
            ],
        ),
        migrations.CreateModel(
            name='Vendors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('address', models.TextField()),
                ('website', models.TextField()),
                ('other_contact_info', models.TextField()),
                ('preferred_vendor', models.BooleanField()),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
            ],
        ),
        migrations.AddField(
            model_name='orders',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='apos.vendors'),
        ),
        migrations.CreateModel(
            name='WasteAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_weight_wasted', models.DecimalField(decimal_places=2, max_digits=10)),
                ('most_common_waste_reason', models.CharField(choices=[('Overproduction/Large portion size', 'Overproduction/Large portion size'), ('Spoilage', 'Spoilage'), ('Over-ordering', 'Over-ordering')], max_length=33)),
                ('analysis_date', models.DateField(auto_now_add=True)),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.menuitems')),
            ],
        ),
        migrations.CreateModel(
            name='WasteRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight_wasted', models.DecimalField(decimal_places=3, max_digits=10)),
                ('waste_reason', models.CharField(choices=[('Overproduction/Large portion size', 'Overproduction/Large portion size'), ('Spoilage', 'Spoilage'), ('Over-ordering', 'Over-ordering')], max_length=33)),
                ('date_wasted', models.DateField(auto_now=True)),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.menuitems')),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyShiftRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_week_date', models.DateField()),
                ('end_week_date', models.DateField()),
                ('regular_hours_worked', models.DecimalField(decimal_places=1, max_digits=10)),
                ('overtime_hours_worked', models.DecimalField(decimal_places=1, max_digits=10)),
                ('earnings_this_week', models.DecimalField(decimal_places=2, max_digits=10)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apos.employees')),
                ('external_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apos.externallocations')),
            ],
        ),
    ]
